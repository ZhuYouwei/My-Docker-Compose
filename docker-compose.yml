version: "3.7"

services:
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    ports:
      - 10001:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  mysql:
    container_name: mysql
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: db
      MYSQL_ROOT_HOST: 172.18.0.1
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - my-db:/var/lib/mysql
  elasticsearch:
    container_name: es
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "true"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - es-data:/usr/share/elasticsearch/data
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.1
    depends_on:
      - elasticsearch
    environment:
      SERVER_NAME: kibana
      xpack.security.enabled: "true"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - 5601:5601
  vpn:
    restart: always
    container_name: ipsec-vpn-server
    image: hwdsl2/ipsec-vpn-server:latest
    privileged: true
    env_file:
      - vpn.env
    ports:
      - 500:500/udp
      - 4500:4500/udp
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./conf:/etc/nginx

volumes:
  my-db:
    driver: local
  jenkins_home:
    driver: local
  es-data:
    driver: local
